/*===================================WOE Variable Transformation====================================*/ 
/*Exclude highly correlated variables*/
proc sql;
create table y.as_xsell_to_term_feb as
select target_hasTerm, unique_customer_id, 
has_email,
cert_channel_InPhone_count,
cert_channel_Internet_count,
cert_channel_OutPhone_count,
active_auth_as_cert_count,
active_AD_cert_count,
active_ADI_cert_count,
active_CARP_cert_count,
paymode_CC_cert_count,
paymode_PAC_cert_count,
paymode_ULOC_cert_count,
lapsed_cert_count,
sum_cert_annualizedpremium,
terminated_cov_count,
min_age_at_contract,
min_years_since_purchase,
max_face_amount
from y.as_xsell_to_term_data;
run;


/* WOE - Binning variables */

data y.as_xsell_to_term_feb_1;
set y.as_xsell_to_term_feb;

if has_email = . then has_email_sort = 1;
else if has_email = 0 then has_email_sort = 2;
else has_email_sort=3;


if cert_channel_InPhone_count=. then cert_channel_InPhone_count_sort=1;
else if cert_channel_InPhone_count=0 then cert_channel_InPhone_count_sort=2;
else cert_channel_InPhone_count_sort=3;


if cert_channel_Internet_count=. then cert_channel_Internet_count_sort=1;
else if cert_channel_Internet_count=0 then cert_channel_Internet_count_sort=2;
else cert_channel_Internet_count_sort=3;


if cert_channel_OutPhone_count=. then cert_channel_OutPhone_count_sort=1;
else if cert_channel_OutPhone_count=0 then cert_channel_OutPhone_count_sort=2;
else if cert_channel_OutPhone_count=1 then cert_channel_OutPhone_count_sort=3;
else cert_channel_OutPhone_count_sort=4;


if active_auth_as_cert_count=. then active_auth_as_cert_count_sort=1;
else if active_auth_as_cert_count=1 then active_auth_as_cert_count_sort=2;
else active_auth_as_cert_count_sort=3;


if active_AD_cert_count=. then active_AD_cert_count_sort=1;
else if active_AD_cert_count=0 then active_AD_cert_count_sort=2;
else active_AD_cert_count_sort=3;


if active_ADI_cert_count=. then active_ADI_cert_count_sort=1;
else if active_ADI_cert_count=0 then active_ADI_cert_count_sort=2;
else active_ADI_cert_count_sort=3;


if active_CARP_cert_count=. then active_CARP_cert_count_sort=1;
else if active_CARP_cert_count=0 then active_CARP_cert_count_sort=2;
else active_CARP_cert_count_sort=3;


if paymode_CC_cert_count=. then paymode_CC_cert_count_sort=1;
else if paymode_CC_cert_count=0 then paymode_CC_cert_count_sort=2;
else paymode_CC_cert_count_sort=3;


if paymode_PAC_cert_count=. then paymode_PAC_cert_count_sort=1;
else if paymode_PAC_cert_count=0 then paymode_PAC_cert_count_sort=2;
else if paymode_PAC_cert_count=1 then paymode_PAC_cert_count_sort=3;
else paymode_PAC_cert_count_sort=4;


if paymode_ULOC_cert_count=. then paymode_ULOC_cert_count_sort=1;
else if paymode_ULOC_cert_count=0 then paymode_ULOC_cert_count_sort=2;
else paymode_ULOC_cert_count_sort=3;


if lapsed_cert_count=. then lapsed_cert_count_sort=1;
else if lapsed_cert_count=0 then lapsed_cert_count_sort=2;
else lapsed_cert_count_sort=3;


if terminated_cov_count=. then terminated_cov_count_sort=1;
else if terminated_cov_count=0 then terminated_cov_count_sort=2;
else terminated_cov_count_sort=3;


if min_age_at_contract=. then min_age_at_contract_sort=1;
else if min_age_at_contract <=20 then min_age_at_contract_sort=2;
else if min_age_at_contract <=25 then min_age_at_contract_sort=3;
else if min_age_at_contract <=30 then min_age_at_contract_sort=4;
else if min_age_at_contract <=35 then min_age_at_contract_sort=5;
else if min_age_at_contract <=40 then min_age_at_contract_sort=6;
else if min_age_at_contract <=45 then min_age_at_contract_sort=7;
else if min_age_at_contract <=50 then min_age_at_contract_sort=8;
else if min_age_at_contract <=55 then min_age_at_contract_sort=9;
else min_age_at_contract_sort=10;


if min_years_since_purchase=. then min_years_since_purchase_sort=1;
else if min_years_since_purchase <=5 then min_years_since_purchase_sort=2;
else if min_years_since_purchase <=10 then min_years_since_purchase_sort=3;
else if min_years_since_purchase <=15 then min_years_since_purchase_sort=4;
else min_years_since_purchase_sort=5;


if max_face_amount=. then max_face_amount_sort=1;
else if max_face_amount < 100000 then max_face_amount_sort=2;
else if max_face_amount = 100000 then max_face_amount_sort=3;
else if max_face_amount <= 150000 then max_face_amount_sort=4;
else max_face_amount_sort=5;

if sum_cert_annualizedpremium=. then sum_cert_annualizedpremium_sort=1;
else if sum_cert_annualizedpremium <=100 then sum_cert_annualizedpremium_sort=2;
else if sum_cert_annualizedpremium <=150 then sum_cert_annualizedpremium_sort=3;
else if sum_cert_annualizedpremium <=200 then sum_cert_annualizedpremium_sort=4;
else sum_cert_annualizedpremium_sort=5;

run;
